I"∫$<p><em>‚ÄúHerzlichen Gl√ºckwunsch! Du bist jetzt Product Manager!
Ach ja, wir setzen hier das Scaled Agile Framework (SAFe) ein, Product Manager ist da ein bisschen anders als Du es vielleicht im klassischen Sinn kennst. Macht ja nix, geh mal auf scaledagile.com oder so √§hnlich, da stehen ein paar Zeilen zu der Rolle und den Aufgaben, die Dich erwarten. Ach ja, Du kannst auf jedes Element des SAFe Big Picture klicken und kriegst dann entsprechende Hintergrundinfos - viel Spa√ü!‚Äù</em></p>

<p>Ihr seid also Product Manager in einem Unternehmen geworden, das auf das Scaled Agile Framework setzt. Soweit so gut. Leider gibt es au√üer der dazu geh√∂rigen Webseite, einem nicht mehr ganz aktuellen Buch und einigen Schulungen, die Lidl und Aldi nicht ins Sortiment aufnehmen w√ºrden, nicht allzu viele Informationen zu eben dieser zentralen Position in SAFe.</p>

<p>Auf der Team-Ebene im Framework ist es einfacher, f√ºr ScrumMaster und Product Owner gibt es einen unersch√∂pflichen Fundus an B√ºchern, Podcasts, Blogs, Schulungen und Veranstaltungen, die helfen k√∂nnen, diese Rollen so gut wie eben m√∂glich auszuf√ºllen. F√ºr den Product Manager in SAFe ist das - diplomatisch ausgedr√ºckt - ein Feld mit Ausbaupotenzial‚Ä¶</p>

<p>Hier komme ich mit diesem Blogpost ins Spiel:
Ich darf in einem Unternehmen, welches vor nicht allzu langer Zeit auf SAFe umgestellt hat, als ScrumMaster arbeiten. Auch wir haben Product Manager und daher schon einige Erfahrungen mit dem ‚ÄúLeben‚Äù dieser Rolle machen k√∂nnen. Aus meiner rein subjektiven Sicht und mit den Erfahrungen aus genau einem Einsatz von SAFe m√∂chte ich mir trotzdem anma√üen, ein paar Erfahrungen bzw. Hinweise zu teilen und Euch damit hoffentlich den Einstieg in die Rolle ein wenig leichter zu machen!</p>

<h5 id="1-in-safe-ist-der-kunde-sehr-weit-weg-du-bist-der-proxy-kunde">1. In SAFe ist der Kunde sehr weit weg, Du bist der Proxy-Kunde</h5>
<p>Leider haben die Macher von SAFe den Kunden in ihrem Framework erst einmal vollkommen vergessen und in der kommenden Version 4.0 sehr weit weg von den Orten ‚Äúwo die Action ist‚Äù entfernt plaziert. Der Kleber zwischen Kunden, PO und Team bist Du, quasi als Proxy.</p>

<p>Die Anforderungen an das Produkt kommen von Dir, und nur von Dir!</p>

<h5 id="2-bereite-dich-auf-das-release-planning-vor">2. Bereite Dich auf das Release Planning vor</h5>
<p>Die Anforderungen kommen also von Dir. Das klingt erstmal einfach, ist es aber gar nicht (so sehr).
Im Scaled Agile Framework gibt es alle paar Wochen ein gro√ües Spektakel - das Release Planning Event (ab 4.0 ist es das Product Increment Planning Event). Das sind ein, zwei oder vielleicht auch drei Tage, an denen sich alle Beteiligten zusammen setzen und die n√§chste gro√üe Iteration planen:
Der Product Manager stellt die gew√ºnschten Features vor und unterst√ºtzt den Product Owner und das Team dabei, f√ºr dieses Feature User Stories zu definieren und zu sch√§tzen. Danach, wird festgelegt, welche Features in der n√§chsten Iteration realisiert werden sollen.
Damt ist das Event f√ºr Dich ein zentraler Steuerungspunkt.</p>
<blockquote>
  <p>Beim Planning Event bist Du der K√∂nig!
Sei ein weiser und umsichtiger Herrscher!</p>
</blockquote>

<h6 id="definiere-anforderungen">Definiere Anforderungen</h6>
<p>Deine Features sind Anforderungen und sollen keine L√∂sungsbeschreibungen sein. Versuche, Dich von technischen Details, beteiligten Systemen und Schnittstellen zu l√∂sen - darum k√ºmmern sich die Entwicklungsteams und finden sicher die beste und einfachste L√∂sung.
Beschreibe was Du willst und warum Du es ben√∂tigst. Mache es so einfach und klar wie m√∂glich. Wenn in Deinem Featuretext bestimmte Schl√ºsselworte (z.B. ‚Äúund‚Äù) vorkommen, kann es sein, dass Du vielleicht zwei Features in eines formuliert hast? Solche Fragestellungen und Methodiken unterscheiden sich nicht so extrem von denen, die ein Product Owner zur Erstellung seiner User Stories nutzt. Zum Gl√ºck gibt es dazu jede Menge Literatur und Unterst√ºtzung!</p>

<h6 id="sage-wann-es-f√ºr-dich-ok-ist">Sage, wann es f√ºr Dich ok ist</h6>
<p>Das Team will Deine Anforderung umsetzen, der Product Owner m√∂chte seine Stories so erstellen, dass sie die Anforderungen m√∂glichst effizient darstellen.
Was kannst Du tun, um deine Teams zu untest√ºtzen?
Formuliere Akzeptanzkriterien zu Deiner Anforderung: Was muss erf√ºllt sein, damit alles so funktionieren kann, wie Du es Dir ausgedacht hast. Diese Kriterien m√ºssen verifizierbar, also testbar sein. Das ist nicht einfach und braucht √úbung. Mach Dir keine Sorgen, wenn es am Anfang ein wenig holpert ;-)</p>

<p>Ein weiterer Weg zu sagen, was Du willst, ist das Aufstellen von Szenarien: Bringe ein paar Beispiele von dem, was Du von der L√∂sung erwartest. Es ist schwierig, ein Szenario nicht zu einer Bedienungsanleitung f√ºr eine Software werden zu lassen. Pr√§sentiere die Szenarien jemandem, der die bestehende technische L√∂sung nicht kennt und der Dir ehrliches Feedback gibt. Auch die ScrumMaster und der Release Train Engineer helfen sicher gerne!</p>

<h6 id="bestimme-was-es-dir-bringt">Bestimme, was es Dir bringt</h6>
<p>Ein sehr schwieriger aber wichtiger Punkt ist die Bewertung Deiner Anforderungen. Du musst einen Weg finden, Deinen Features einen Wert zuzuweisen. Das kann alles von einem Euro-Wert oder einer virtuellen Projektw√§hrung bis hin zum Klassiker (Gummib√§rchen) sein. Nicht immer lassen sich Features mit einem Ertrag versehen. Was ist mit Anforderungen, die dem Marketing oder dem internen Reporting dienen? Gl√ºcklicherweise bist Du auch hier nicht allein, denn es ist kein SAFe-spezifisches Problem.</p>

<h6 id="schreib-einen-preis-dran">Schreib einen Preis dran</h6>
<p>Wenn Du es geschafft hast, einen Wert an Deine Anforderung zu schreiben, brauchst Du noch die Information, was es Dich kostet. Vielleicht lohnt sich diese Funktinalit√§t ja gar nicht!
Kannst Du den Preis, also den Aufwand zur Realisierung, selber bestimmen? Wahrscheinlich schon, aber gerade am Anfang nicht besonders gut. 
Zum Gl√ºck sind wir ja ein Team: Lass Deine Product Owner und ihre Teams die Features mit Dir zusammen in Relation zueinander sch√§tzen. Beobachte, welche Kriterien sie heranziehen. Werte die Durchlaufzeiten Deiner Features aus. Mach das immer! Bei jedem Feature. In jedem Release.
Mit diesen Daten und Erfahrungswerten kannst Du sicher bald auch alleine eine grobe Einsch√§tzung machen, die f√ºr die Abw√§gung von Wert und Kosten als Vorbereitung zum Planning Event ausreichend ist.</p>

<h6 id="es-ist-ein-wunschzettel">Es ist ein Wunschzettel</h6>
<p>Deine Liste mit Anforderungen, die Du in der n√§chsten Iteration umgesetzt haben m√∂chtest, ist wie ein Wunschzettel. Du willst alles davon haben. Du wei√üt aber leider auch, dass Du vielleicht nicht alles haben kannst (Ich habe auch an zwei aufeinanderfolgenden Weihnachtsfesten NICHT den gro√üen Leiterwagen von Playmobil bekommen!). Das ist doof, aber eben auch die Realit√§t. Die Realit√§t m√ºssen wir leider akzeptieren und mit den Konsequenzen umgehen, wenn wir unseren Job gut machen wollen.
Wenn Du also nicht alles haben kannst, musst Du sagen, was Dein gr√∂√üter Wunsch ist. So stellst Du sicher, dass der Leiterwagen definitiv unter dem Baum landet.
Das ist nicht neu f√ºr Dich und Du wei√üt, worauf ich hinaus will: Du musst priorisieren.</p>

<p>Du hast nat√ºrlich das Recht, Deine Priorisierung zu geeigneten Zeitpunkten zu √§ndern. Im Planning Event. Zum Sprintwechsel. Wann immer die Product Owner und die ScrumMaster es Dir erlauben! Nutze dieses Instrument, es ist ein m√§chtiges Steuerrad auf dem Weg zu Deinem Ziel.</p>

<blockquote>
  <p>Agilit√§t ist etwas seltsames - je mehr man sie skalieren will, desto kleiner scheint sie zu werden.</p>
</blockquote>

<h5 id="3-sei-beim-team">3. Sei beim Team</h5>
<p>Bei der Skalierung von Agilit√§t scheint es irgendwie schwer zu sein, agil zu bleiben. In SAFe kann man leicht auf die Idee kommen, es g√§be √úbergabepunkte, an denen die Verantwortlichkeit f√ºr ein Feature wechselt.
Du als Product Manager willst aber Dein Feature nicht am Planning Event abgeben und Dich f√ºnf Wochen sp√§ter √ºberraschen lassen, was daraus geworden ist. Damit die Vorteile eines agilen Ansatzes nicht wie ein ein Wasserfall ins Tal st√ºrzen, musst Du Dich bem√ºhen, immer nah an den implementierenden Teams zu sein.</p>

<p>Warum m√∂chtest Du das so sehr?</p>

<ul>
  <li>Nur, wenn Du in kurzen Zyklen siehst, was das Team macht, kannst Du steuern und effektiv unterst√ºtzen</li>
  <li>Bist Du nah beim Team, kannst Du viel √ºber die Arbeitsweise und Probleme dort lernen. Das kann Dir beim Planen und Formulieren der n√§chsten Anforderungen enorm helfen.</li>
</ul>

<p>Plane Dir also den Kalender nicht zu voll, damit Du kurzfristig f√ºr Deine Teams verf√ºgbar bist. Schau √∂fter mal spontan vorbei und lass Dir den Stand der L√∂sung zeigen. Gehe zu den Regelmeetings und gib sp√§testens dort ein ehrliches Feedback.</p>

<p>Nur so bekommst Du am Ende das beste Produkt, welches unter den Rahmenbedingungen in Deinem Unternehmen m√∂glich ist!</p>

<h5 id="4-schlussformel">4. Schlussformel</h5>
<p>Vielleicht konnten Dir diese Ausf√ºhrungen ein bisschen helfen oder haben zu ganz neuen Ans√§tzen und Ideen bei Dir gef√ºhrt? Das w√ºrde mich sehr freuen.
In jedem Fall w√ºnsche ich viel Spa√ü und dass Du am Ende ein gro√üartiges Produkt geliefert bekommst!</p>
:ET